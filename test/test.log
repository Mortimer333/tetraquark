Mapping...
=======================
Creating aliases...
=======================
Aliases: 
Recreating...
=======================
Block: Tetraquark\Block\TryBlock
Subtype: try
Instruction: try {
Instruction Start: 0
Caret: 160
Name: ``
Child Index: `0`
Catch block: [1] 
  Block: Tetraquark\Block\CatchBlock
  Subtype: catch
  Instruction: catch(e) {
  Instruction Start: 60
  Caret: 160
  Name: ``
  Child Index: `0`
  Cond block: [0] 
  Finally block: [1] 
    Block: Tetraquark\Block\FinallyBlock
    Subtype: finally
    Instruction: finally {
    Instruction Start: 110
    Caret: 160
    Name: ``
    Child Index: `0`
    Alias: ``
    Blocks: [1] 
    =======
      Block: Tetraquark\Block\TryBlock
      Subtype: try
      Instruction: try {
      Instruction Start: 121
      Caret: 158
      Name: ``
      Child Index: `0`
      Catch block: [1] 
        Block: Tetraquark\Block\CatchBlock
        Subtype: catch
        Instruction: catch (e) {
        Instruction Start: 132
        Caret: 158
        Name: ``
        Child Index: `0`
        Cond block: [0] 
        Finally block: [1] 
          Block: Tetraquark\Block\FinallyBlock
          Subtype: finally
          Instruction: finally {
          Instruction Start: 146
          Caret: 158
          Name: ``
          Child Index: `0`
          Alias: ``
          Blocks: [0] 
          =======
        Alias: ``
        Blocks: [0] 
        =======
      Alias: ``
      Blocks: [0] 
      =======
  Alias: ``
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\ClassBlock
    Subtype: class
    Instruction: class asdas 
    Instruction Start: 72
    Caret: 107
    Name: `asdas`
    Child Index: `0`
    Alias: `asdas`
    Blocks: [1] 
    =======
      Block: Tetraquark\Block\ClassMethodBlock
      Subtype: method
      Instruction: constructor() {
      Instruction Start: 87
      Caret: 104
      Name: `constructor`
      Child Index: `0`
      Arguments: [0] `
      Alias: `constructor`
      Blocks: [0] 
      =======
Alias: ``
Blocks: [2] 
=======
  Block: Tetraquark\Block\ChainLinkBlock
  Subtype: chain:first
  Instruction: console.log
  Instruction Start: 8
  Caret: 25
  Name: ``
  Child Index: `0`
  Bracket block: [0] 
  Alias: ``
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\CallerBlock
    Subtype: (
    Instruction: 
    Instruction Start: 19
    Caret: 25
    Name: ``
    Child Index: `0`
    Alias: ``
    Blocks: [1] 
    =======
      Block: Tetraquark\Block\StringBlock
      Subtype: 
      Instruction: 'asd'
      Instruction Start: 0
      Caret: 5
      Name: ``
      Child Index: `0`
      Alias: ``
      Blocks: [0] 
      =======
  Block: Tetraquark\Block\FunctionBlock
  Subtype: function
  Instruction: function functionName() {
  Instruction Start: 28
  Caret: 56
  Name: `functionName`
  Child Index: `1`
  Arguments: [0] `
  Alias: `functionName`
  Blocks: [0] 
  =======
Duration: 0.004s


try{console.log('asd');function functionName(){}}catch(e){class asdas{constructor(){}}}finally{try{}catch(e){}finally{}}
