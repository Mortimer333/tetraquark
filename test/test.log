 //comment\n///**/** comment\n//** comment2\n/*/* comment 3 */\n/**\n * Comment 4\n * nasnasd\n * asdnansd\nlet a /* asd = 2;\n\nfunction* test() {\n    console.log('asd')\n    let b = 'c'\n}\n*/let bv = asd;\n\nif (true) console.log\n\nif (asda) {asdasd}let g = 'df'\nmissed\nlet a = 'asd'\nlet b = 2 +\n3;\n\nlet c = 2\n+ 3\n\nlet d = 2\n+\n3\n\nclass ClassName {\n    {}\nif (true){\n    class ClassName2 {\n        if() {continue\n        }\n    }\n}\n}\nasd\n
Duration: 0.008s
[
  [
    start => 1,
    end => 10,
    landmark => {
        "class": "SingleCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "comment"
    },
    index => 0,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 11,
    end => 27,
    landmark => {
        "class": "SingleCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "\/**\/** comment"
    },
    index => 1,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 28,
    end => 41,
    landmark => {
        "class": "SingleCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "** comment2"
    },
    index => 2,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 42,
    end => 58,
    landmark => {
        "class": "MultiCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "\/* comment 3"
    },
    index => 3,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 60,
    end => 180,
    landmark => {
        "class": "MultiCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "*\n * Comment 4\n * nasnasd\n * asdnansd\nlet a \/* asd = 2;\n\nfunction* test() {\n    console.log('asd')\n    let b = 'c'\n}"
    },
    index => 4,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 180,
    end => 193,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "bv = asd;"
    },
    index => 5,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 195,
    end => 217,
    landmark => {
        "class": "ShortIfBlock",
        "_stop": true
    },
    data => {
        "condition": "true",
        "negation": "c",
        "var": "onsole.log\n"
    },
    index => 6,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 218,
    end => 236,
    landmark => {
        "class": "IfBlock",
        "_block": {
            "map": {
                "}": {
                    "_finish": true,
                    "_stop": true
                },
                "{": {
                    "_skip": true,
                    "_stop": true
                }
            }
        },
        "_stop": true
    },
    data => {
        "condition": "asda"
    },
    index => 7,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 236,
    end => 249,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "g = 'df'\n"
    },
    index => 8,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 250,
    end => 255,
    landmark => {
        "_missed": true
    },
    data => {
        "missed": "missed"
    },
    index => 9,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 256,
    end => 270,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "a = 'asd'\n"
    },
    index => 10,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 270,
    end => 284,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "b = 2 +\n3;"
    },
    index => 11,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 286,
    end => 300,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "c = 2\n+ 3\n"
    },
    index => 12,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 301,
    end => 315,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "d = 2\n+\n3\n"
    },
    index => 13,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 316,
    end => 417,
    landmark => {
        "class": "ClassBlock",
        "_block": {
            "map": {
                "}": {
                    "_finish": true,
                    "_stop": true
                },
                "{": {
                    "_skip": true,
                    "_stop": true
                }
            }
        },
        "_stop": true
    },
    data => {
        "class_name": "ClassName"
    },
    index => 14,
    parent => script
    children => 
      [
        [
          start => 341,
          end => 415,
          landmark => {
              "class": "IfBlock",
              "_block": {
                  "map": {
                      "}": {
                          "_finish": true,
                          "_stop": true
                      },
                      "{": {
                          "_skip": true,
                          "_stop": true
                      }
                  }
              },
              "_stop": true
          },
          data => {
              "condition": "true"
          },
          index => 0,
          parent => parent[14]
          children => 
            [
              [
                start => 356,
                end => 413,
                landmark => {
                    "class": "ClassBlock",
                    "_block": {
                        "map": {
                            "}": {
                                "_finish": true,
                                "_stop": true
                            },
                            "{": {
                                "_skip": true,
                                "_stop": true
                            }
                        }
                    },
                    "_stop": true
                },
                data => {
                    "class_name": "ClassName2"
                },
                index => 0,
                parent => parent[0]
                children => 
                  [
                    [
                      start => 383,
                      end => 407,
                      landmark => {
                          "class": "IfBlock",
                          "_block": {
                              "map": {
                                  "}": {
                                      "_finish": true,
                                      "_stop": true
                                  },
                                  "{": {
                                      "_skip": true,
                                      "_stop": true
                                  }
                              }
                          },
                          "_stop": true
                      },
                      data => {
                          "condition": ""
                      },
                      index => 0,
                      parent => parent[0]
                      children => 
                        [
                          [
                            start => 390,
                            end => 399,
                            landmark => {
                                "class": "ContinueBlock",
                                "_stop": true
                            },
                            data => [],
                            index => 0,
                            parent => parent[0]
                            children => 
                              [
                              ],
                          ],
                        ],
                    ],
                  ],
              ],
            ],
        ],
      ],
  ],
  [
    start => 418,
    end => 421,
    landmark => {
        "_missed": true
    },
    data => {
        "missed": "\nasd"
    },
    index => 15,
    parent => script
    children => 
      [
      ],
  ],
],



