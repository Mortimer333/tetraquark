Duration: 0.002s
[
  [
    start => 1,
    end => 9,
    landmark => {
        "class": "SingleCommentBlock"
    },
    data => {
        "comment": "comment"
    },
    index => 0,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 11,
    end => 26,
    landmark => {
        "class": "SingleCommentBlock"
    },
    data => {
        "comment": "\/**\/** comment"
    },
    index => 1,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 28,
    end => 40,
    landmark => {
        "class": "SingleCommentBlock"
    },
    data => {
        "comment": "** comment2"
    },
    index => 2,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 42,
    end => 57,
    landmark => {
        "class": "MultiCommentBlock"
    },
    data => {
        "comment": "\/* comment 3"
    },
    index => 3,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 60,
    end => 179,
    landmark => {
        "class": "MultiCommentBlock"
    },
    data => {
        "comment": "*\n * Comment 4\n * nasnasd\n * asdnansd\nlet a \/* asd = 2;\n\nfunction* test() {\n    console.log('asd')\n    let b = 'c'\n}"
    },
    index => 4,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 183,
    end => 201,
    landmark => {
        "class": "IfBlock"
    },
    data => {
        "condition": "asda"
    },
    index => 5,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 203,
    end => 217,
    landmark => {
        "class": "LetVariableBlock"
    },
    data => {
        "var": "a = 'asd'\n"
    },
    index => 6,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 217,
    end => 231,
    landmark => {
        "class": "LetVariableBlock"
    },
    data => {
        "var": "b = 2 +\n3;"
    },
    index => 7,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 233,
    end => 247,
    landmark => {
        "class": "LetVariableBlock"
    },
    data => {
        "var": "c = 2\n+ 3\n"
    },
    index => 8,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 248,
    end => 262,
    landmark => {
        "class": "LetVariableBlock"
    },
    data => {
        "var": "d = 2\n+\n3\n"
    },
    index => 9,
    parent => null,
    children => 
      [
      ],
  ],
  [
    start => 263,
    end => 364,
    landmark => {
        "class": "ClassBlock"
    },
    data => {
        "class_name": "ClassName"
    },
    index => 10,
    parent => null,
    children => 
      [
        [
          start => 288,
          end => 362,
          landmark => {
              "class": "IfBlock"
          },
          data => {
              "condition": "true"
          },
          index => 0,
          parent => parent[10]
          children => 
            [
              [
                start => 303,
                end => 360,
                landmark => {
                    "class": "ClassBlock"
                },
                data => {
                    "class_name": "ClassName2"
                },
                index => 0,
                parent => parent[0]
                children => 
                  [
                    [
                      start => 330,
                      end => 354,
                      landmark => {
                          "class": "IfBlock"
                      },
                      data => {
                          "condition": ""
                      },
                      index => 0,
                      parent => parent[0]
                      children => 
                        [
                          [
                            start => 337,
                            end => 346,
                            landmark => {
                                "class": "ContinueBlock"
                            },
                            data => [],
                            index => 0,
                            parent => parent[0]
                            children => 
                              [
                              ],
                          ],
                        ],
                    ],
                  ],
              ],
            ],
        ],
      ],
  ],
],



