Mapping...
=======================
Creating aliases...
=======================
Aliases: ClassName => a, strlen => b, emfor => c, objSoloTest => d, start => e, reverse => f, value => g, modifier => h, str => i, to => j, i => k, 
Recreating...
=======================
Block: Tetraquark\Block\ClassBlock
Subtype: class
Instruction: class ClassName {
Instruction Start: 1
Caret: 33
Name: `ClassName`
Alias: `a`
Blocks: [1] 
=======
  Block: Tetraquark\Block\ClassMethodBlock
  Subtype: method
  Instruction: emfor() {
  Instruction Start: 20
  Caret: 31
  Name: `emfor`
  Arguments: [0] `
  Alias: `c`
  Blocks: [0] 
  =======
Block: Tetraquark\Block\VariableBlock
Subtype: let
Instruction: let objSoloTest = ['a']
Instruction Start: 35
Caret: 58
Name: ``
Value: ``
Alias: ``
Blocks: [1] 
=======
  Block: Tetraquark\Block\VariableItemBlock
  Subtype: 
  Instruction:  objSoloTest =
  Instruction Start: 0
  Caret: 20
  Name: `objSoloTest`
  Value: ``
  Alias: `d`
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\ArrayBlock
    Subtype: [
    Instruction: 
    Instruction Start: 15
    Caret: 19
    Name: ``
    Alias: ``
    Blocks: [1] 
    =======
      Block: Tetraquark\Block\StringBlock
      Subtype: 
      Instruction: 'a'
      Instruction Start: 16
      Caret: 19
      Name: ``
      Alias: ``
      Blocks: [0] 
      =======
Block: Tetraquark\Block\VariableBlock
Subtype: let
Instruction: let start = 1
Instruction Start: 60
Caret: 73
Name: ``
Value: ``
Alias: ``
Blocks: [1] 
=======
  Block: Tetraquark\Block\VariableItemBlock
  Subtype: 
  Instruction:  start =
  Instruction Start: 0
  Caret: 10
  Name: `start`
  Value: ``
  Alias: `e`
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  1
    Instruction Start: 8
    Caret: 10
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
Block: Tetraquark\Block\VariableBlock
Subtype: let
Instruction: let reverse = false
Instruction Start: 75
Caret: 94
Name: ``
Value: ``
Alias: ``
Blocks: [1] 
=======
  Block: Tetraquark\Block\VariableItemBlock
  Subtype: 
  Instruction:  reverse =
  Instruction Start: 0
  Caret: 16
  Name: `reverse`
  Value: ``
  Alias: `f`
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  false
    Instruction Start: 10
    Caret: 16
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
Block: Tetraquark\Block\VariableBlock
Subtype: let
Instruction: let value = 'asd'
Instruction Start: 96
Caret: 113
Name: ``
Value: ``
Alias: ``
Blocks: [1] 
=======
  Block: Tetraquark\Block\VariableItemBlock
  Subtype: 
  Instruction:  value =
  Instruction Start: 0
  Caret: 14
  Name: `value`
  Value: ``
  Alias: `g`
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\StringBlock
    Subtype: 
    Instruction: 'asd'
    Instruction Start: 9
    Caret: 14
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
Block: Tetraquark\Block\VariableBlock
Subtype: let
Instruction: let modifier = 1
Instruction Start: 115
Caret: 131
Name: ``
Value: ``
Alias: ``
Blocks: [1] 
=======
  Block: Tetraquark\Block\VariableItemBlock
  Subtype: 
  Instruction:  modifier =
  Instruction Start: 0
  Caret: 13
  Name: `modifier`
  Value: ``
  Alias: `h`
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  1
    Instruction Start: 11
    Caret: 13
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
Block: Tetraquark\Block\FunctionBlock
Subtype: function
Instruction: function strlen(str) {
Instruction Start: 132
Caret: 176
Name: `strlen`
Arguments: [1] `
  Block: Tetraquark\Block\UndefinedBlock
  Subtype: 
  Instruction: str
  Instruction Start: -1
  Caret: 2
  Name: `str`
  Alias: `i`
  Blocks: [0] 
  =======
Alias: `b`
Blocks: [1] 
=======
  Block: Tetraquark\Block\ReturnBlock
  Subtype: return
  Instruction:  str.length;
  Instruction Start: 157
  Caret: 174
  Name: ``
  Alias: ``
  Blocks: [2] 
  =======
    Block: Tetraquark\Block\ChainLinkBlock
    Subtype: first
    Instruction: str
    Instruction Start: 1
    Caret: 4
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\ChainLinkBlock
    Subtype: .
    Instruction: length
    Instruction Start: 4
    Caret: 10
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
Block: Tetraquark\Block\ForBlock
Subtype: for
Instruction: for (var to = 0; to < objSoloTest.length; to++) {
Instruction Start: 178
Caret: 259
Name: ``
Cond block: [8] 
  Block: Tetraquark\Block\UndefinedBlock
  Subtype: 
  Instruction: var 
  Instruction Start: -5
  Caret: -1
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\AttributeBlock
  Subtype: 
  Instruction: to = 0
  Instruction Start: 4
  Caret: 10
  Name: `to`
  Alias: `j`
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  0
    Instruction Start: -1
    Caret: 1
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
  Block: Tetraquark\Block\UndefinedBlock
  Subtype: 
  Instruction:  to 
  Instruction Start: -5
  Caret: -1
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\SymbolBlock
  Subtype: <
  Instruction: <
  Instruction Start: 4
  Caret: 4
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\ChainLinkBlock
  Subtype: first
  Instruction: objSoloTest
  Instruction Start: 6
  Caret: 17
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\ChainLinkBlock
  Subtype: .
  Instruction: length
  Instruction Start: 17
  Caret: 24
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\UndefinedBlock
  Subtype: 
  Instruction:  to
  Instruction Start: -4
  Caret: -1
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\OperatorBlock
  Subtype: ++
  Instruction: ++
  Instruction Start: 3
  Caret: 5
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
Alias: ``
Blocks: [2] 
=======
  Block: Tetraquark\Block\ChainLinkBlock
  Subtype: first
  Instruction: console
  Instruction Start: 229
  Caret: 236
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\ChainLinkBlock
  Subtype: end:method
  Instruction: log
  Instruction Start: 236
  Caret: 256
  Name: ``
  Alias: ``
  Blocks: [2] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction: objSoloTest
    Instruction Start: 229
    Caret: 240
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\ArrayBlock
    Subtype: [
    Instruction: 
    Instruction Start: 252
    Caret: 255
    Name: ``
    Alias: ``
    Blocks: [1] 
    =======
      Block: Tetraquark\Block\UndefinedBlock
      Subtype: 
      Instruction: to
      Instruction Start: 253
      Caret: 255
      Name: ``
      Alias: ``
      Blocks: [0] 
      =======
Block: Tetraquark\Block\ForBlock
Subtype: for
Instruction: for (let i=start; (!reverse && i < strlen(value)) || (reverse && i >= 0); i += modifier) {
Instruction Start: 261
Caret: 373
Name: ``
Cond block: [6] 
  Block: Tetraquark\Block\UndefinedBlock
  Subtype: 
  Instruction: let 
  Instruction Start: -5
  Caret: -1
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\AttributeBlock
  Subtype: 
  Instruction: i=start
  Instruction Start: 4
  Caret: 11
  Name: ``
  Alias: ``
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction: start
    Instruction Start: -1
    Caret: 4
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
  Block: Tetraquark\Block\CallerBlock
  Subtype: (
  Instruction: 
  Instruction Start: 1
  Caret: 31
  Name: ``
  Alias: ``
  Blocks: [7] 
  =======
    Block: Tetraquark\Block\SymbolBlock
    Subtype: !
    Instruction: !
    Instruction Start: 0
    Caret: 0
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction: reverse 
    Instruction Start: -8
    Caret: 0
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\SymbolBlock
    Subtype: &&
    Instruction: &&
    Instruction Start: 9
    Caret: 10
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  i 
    Instruction Start: 7
    Caret: 10
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\SymbolBlock
    Subtype: <
    Instruction: <
    Instruction Start: 14
    Caret: 14
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  strlen
    Instruction Start: 7
    Caret: 14
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\CallerBlock
    Subtype: (
    Instruction: 
    Instruction Start: 22
    Caret: 28
    Name: ``
    Alias: ``
    Blocks: [1] 
    =======
      Block: Tetraquark\Block\UndefinedBlock
      Subtype: 
      Instruction: value
      Instruction Start: -1
      Caret: 4
      Name: ``
      Alias: ``
      Blocks: [0] 
      =======
  Block: Tetraquark\Block\SymbolBlock
  Subtype: ||
  Instruction: ||
  Instruction Start: 33
  Caret: 34
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\CallerBlock
  Subtype: (
  Instruction: 
  Instruction Start: 36
  Caret: 55
  Name: ``
  Alias: ``
  Blocks: [5] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction: reverse 
    Instruction Start: -9
    Caret: -1
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\SymbolBlock
    Subtype: &&
    Instruction: &&
    Instruction Start: 8
    Caret: 9
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  i 
    Instruction Start: 6
    Caret: 9
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\SymbolBlock
    Subtype: >=
    Instruction: >=
    Instruction Start: 13
    Caret: 14
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  0)
    Instruction Start: 14
    Caret: 17
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
  Block: Tetraquark\Block\AttributeBlock
  Subtype: +=
  Instruction: i += modifier
  Instruction Start: 1
  Caret: 14
  Name: `i`
  Alias: `k`
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\UndefinedBlock
    Subtype: 
    Instruction:  modifier
    Instruction Start: -1
    Caret: 8
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
Alias: ``
Blocks: [2] 
=======
  Block: Tetraquark\Block\ChainLinkBlock
  Subtype: first
  Instruction: console
  Instruction Start: 353
  Caret: 360
  Name: ``
  Alias: ``
  Blocks: [0] 
  =======
  Block: Tetraquark\Block\ChainLinkBlock
  Subtype: end:method
  Instruction: log
  Instruction Start: 360
  Caret: 371
  Name: ``
  Alias: ``
  Blocks: [1] 
  =======
    Block: Tetraquark\Block\StringBlock
    Subtype: 
    Instruction: 'test'
    Instruction Start: 365
    Caret: 371
    Name: ``
    Alias: ``
    Blocks: [0] 
    =======
Duration: 0.007s


class a{c(){}}let d=['a'];let e=1;let f=false;let g='asd';let h=1;function b(i){return i.length;}for(var j=0;j<d.length;j++){console.log(d[j]);}for(let=e(!f&&k<b(g))||(f&&k>=0));k+=h){console.log('test');}
