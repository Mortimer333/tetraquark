 //comment\r\n///**/** comment\r\n//** comment2\r\n/*/* comment 3 */\r\n/**\r\n * Comment 4\r\n * nasnasd\r\n * asdnansd\r\nlet a /* asd = 2;\r\n\r\nfunction* test() {\r\n    console.log('asd')\r\n    let b = 'c'\r\n}\r\n*/let bv = asd;\r\n["sad", [], bsd]\r\nif (true) console.log\r\n\r\nif (asda) {asdasd}let g = 'df'\r\nmissed\r\nlet a = 'asd'\r\nlet b = 2 +\r\n3;\r\n\r\nlet c = 2\r\n+ 3\r\n\r\nlet d = 2\r\n+\r\n3\r\n\r\nclass ClassName {\r\n    {}\r\nif (true){\r\n    class ClassName2 {\r\n        if() {continue\r\n        }\r\n    }\r\n}\r\n}\r\nasd\r
11 > 12
29 > 30
44 > 45
63 > 62
missed: \r\n
193 > 195
7 > 7
9 > 10
209 > 208
missed: \r\n
226 > 226
251 > 251
269 > 271
291 > 285
missed: missed\r
306 > 308
325 > 323
missed: \r\n\r
343 > 343
362 > 362
472 > 473
Duration: 0.006s
[
  [
    start => 1,
    end => 11,
    landmark => {
        "class": "SingleCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "comment"
    },
    index => 0,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 12,
    end => 29,
    landmark => {
        "class": "SingleCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "\/**\/** comment"
    },
    index => 1,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 30,
    end => 44,
    landmark => {
        "class": "SingleCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "** comment2"
    },
    index => 2,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 45,
    end => 61,
    landmark => {
        "class": "MultiCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "\/* comment 3"
    },
    index => 3,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 64,
    end => 194,
    landmark => {
        "class": "MultiCommentBlock",
        "_stop": true
    },
    data => {
        "comment": "*\r\n * Comment 4\r\n * nasnasd\r\n * asdnansd\r\nlet a \/* asd = 2;\r\n\r\nfunction* test() {\r\n    console.log('asd')\r\n    let b = 'c'\r\n}"
    },
    index => 4,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 194,
    end => 207,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "bv = asd;"
    },
    index => 5,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 210,
    end => 225,
    landmark => {
        "class": "ArrayBlock",
        "_block": {
            "map": {
                "]": {
                    "_finish": true,
                    "_stop": true
                },
                "[": {
                    "_skip": true,
                    "_stop": true
                }
            }
        },
        "_stop": true
    },
    data => [],
    index => 6,
    parent => script
    children => 
      [
        [
          start => 212,
          end => 217,
          landmark => {
              "class": "StringBlock",
              "_stop": true
          },
          data => [],
          index => 0,
          parent => parent[6]
          children => 
            [
            ],
        ],
        [
          start => 219,
          end => 220,
          landmark => {
              "class": "ArrayBlock",
              "_block": {
                  "map": {
                      "]": {
                          "_finish": true,
                          "_stop": true
                      },
                      "[": {
                          "_skip": true,
                          "_stop": true
                      }
                  }
              },
              "_stop": true
          },
          data => [],
          index => 1,
          parent => parent[6]
          children => 
            [
            ],
        ],
        [
          start => 221,
          end => 225,
          landmark => {
              "_missed": true
          },
          data => {
              "missed": ", bsd"
          },
          index => 2,
          parent => parent[6]
          children => 
            [
            ],
        ],
      ],
  ],
  [
    start => 227,
    end => 250,
    landmark => {
        "class": "ShortIfBlock",
        "_stop": true
    },
    data => {
        "condition": "true",
        "negation": "c",
        "var": "onsole.log\n"
    },
    index => 7,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 252,
    end => 270,
    landmark => {
        "class": "IfBlock",
        "_block": {
            "map": {
                "}": {
                    "_finish": true,
                    "_stop": true
                },
                "{": {
                    "_skip": true,
                    "_stop": true
                }
            }
        },
        "_stop": true
    },
    data => {
        "condition": "asda"
    },
    index => 8,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 270,
    end => 284,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "g = 'df'\n"
    },
    index => 9,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 285,
    end => 291,
    landmark => {
        "_missed": true
    },
    data => {
        "missed": "missed\r"
    },
    index => 10,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 292,
    end => 307,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "a = 'asd'\n"
    },
    index => 11,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 307,
    end => 322,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "b = 2 +\n3;"
    },
    index => 12,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 326,
    end => 342,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "c = 2\n+ 3\n"
    },
    index => 13,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 344,
    end => 361,
    landmark => {
        "class": "LetVariableBlock",
        "_stop": true
    },
    data => {
        "var": "d = 2\n+\n3\n"
    },
    index => 14,
    parent => script
    children => 
      [
      ],
  ],
  [
    start => 363,
    end => 472,
    landmark => {
        "class": "ClassBlock",
        "_block": {
            "map": {
                "}": {
                    "_finish": true,
                    "_stop": true
                },
                "{": {
                    "_skip": true,
                    "_stop": true
                }
            }
        },
        "_stop": true
    },
    data => {
        "class_name": "ClassName"
    },
    index => 15,
    parent => script
    children => 
      [
        [
          start => 390,
          end => 469,
          landmark => {
              "class": "IfBlock",
              "_block": {
                  "map": {
                      "}": {
                          "_finish": true,
                          "_stop": true
                      },
                      "{": {
                          "_skip": true,
                          "_stop": true
                      }
                  }
              },
              "_stop": true
          },
          data => {
              "condition": "true"
          },
          index => 0,
          parent => parent[15]
          children => 
            [
              [
                start => 406,
                end => 466,
                landmark => {
                    "class": "ClassBlock",
                    "_block": {
                        "map": {
                            "}": {
                                "_finish": true,
                                "_stop": true
                            },
                            "{": {
                                "_skip": true,
                                "_stop": true
                            }
                        }
                    },
                    "_stop": true
                },
                data => {
                    "class_name": "ClassName2"
                },
                index => 0,
                parent => parent[0]
                children => 
                  [
                    [
                      start => 434,
                      end => 459,
                      landmark => {
                          "class": "IfBlock",
                          "_block": {
                              "map": {
                                  "}": {
                                      "_finish": true,
                                      "_stop": true
                                  },
                                  "{": {
                                      "_skip": true,
                                      "_stop": true
                                  }
                              }
                          },
                          "_stop": true
                      },
                      data => {
                          "condition": ""
                      },
                      index => 0,
                      parent => parent[0]
                      children => 
                        [
                          [
                            start => 441,
                            end => 450,
                            landmark => {
                                "class": "ContinueBlock",
                                "_stop": true
                            },
                            data => [],
                            index => 0,
                            parent => parent[0]
                            children => 
                              [
                              ],
                          ],
                        ],
                    ],
                  ],
              ],
            ],
        ],
      ],
  ],
  [
    start => 473,
    end => 477,
    landmark => {
        "_missed": true
    },
    data => {
        "missed": "\r\nasd"
    },
    index => 16,
    parent => script
    children => 
      [
      ],
  ],
],



